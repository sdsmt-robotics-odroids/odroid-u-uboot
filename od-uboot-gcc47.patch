diff -urN u-boot-a/arch/arm/cpu/armv7/config.mk u-boot/arch/arm/cpu/armv7/config.mk
--- u-boot-a/arch/arm/cpu/armv7/config.mk	2013-06-11 07:03:04.000000000 -0500
+++ u-boot/arch/arm/cpu/armv7/config.mk	2013-06-11 07:58:38.383184393 -0500
@@ -20,7 +20,7 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 # MA 02111-1307 USA
 #
-PLATFORM_RELFLAGS += -fno-common -ffixed-r8 -msoft-float
+PLATFORM_RELFLAGS += -fno-common -ffixed-r8 -mfloat-abi=hard -mfpu=vfpv3
 
 # Make ARMv5 to allow more compilers to work, even though its v7a.
 PLATFORM_CPPFLAGS += -march=armv7-a
diff -urN u-boot-a/mkbl2.c u-boot/mkbl2.c
--- u-boot-a/mkbl2.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot/mkbl2.c	2013-06-11 07:51:46.403184194 -0500
@@ -0,0 +1,95 @@
+/*
+ * Copyright (c) 2010 Samsung Electronics Co., Ltd.
+ *              http://www.samsung.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+int main (int argc, char *argv[])
+{
+	FILE		*fp;
+	unsigned char	src;
+	char		*Buf, *a;
+	int		BufLen;
+	int		nbytes, fileLen;
+	unsigned int	checksum = 0;
+	int		i;
+
+	if (argc != 4)
+	{
+		printf("Usage: mkbl1 <source file> <destination file> <size> \n");
+		return -1;
+	}
+
+	BufLen = atoi(argv[3]);
+	Buf = (char *)malloc(BufLen);
+	memset(Buf, 0x00, BufLen);
+
+	fp = fopen(argv[1], "rb");
+	if( fp == NULL)
+	{
+		printf("source file open error\n");
+		free(Buf);
+		return -1;
+	}
+
+	fseek(fp, 0L, SEEK_END);
+	fileLen = ftell(fp);
+	fseek(fp, 0L, SEEK_SET);
+
+	if ( BufLen > fileLen )
+	{
+		printf("Usage: unsupported size\n");
+		free(Buf);
+		fclose(fp);
+		return -1;
+	}
+
+	nbytes = fread(Buf, 1, BufLen, fp);
+
+	if ( nbytes != BufLen )
+	{
+		printf("source file read error\n");
+		free(Buf);
+		fclose(fp);
+		return -1;
+	}
+
+	fclose(fp);
+
+	for(i = 0;i < (14 * 1024) - 4;i++)
+	{
+		checksum += (unsigned char)(Buf[i]);
+	}
+	*(unsigned int*)(Buf+i) = checksum;
+
+	fp = fopen(argv[2], "wb");
+	if (fp == NULL)
+	{
+		printf("destination file open error\n");
+		free(Buf);
+		return -1;
+	}
+
+	a	= Buf;
+	nbytes	= fwrite( a, 1, BufLen, fp);
+
+	if ( nbytes != BufLen )
+	{
+		printf("destination file write error\n");
+		free(Buf);
+		fclose(fp);
+		return -1;
+	}
+
+	free(Buf);
+	fclose(fp);
+
+	return 0;
+}
diff -urN a/Makefile b/Makefile
--- u-boot-a/Makefile	2014-08-29 14:13:57.000000000 -0600
+++ u-boot/Makefile	2015-07-19 14:49:03.745771983 -0600
@@ -345,7 +345,7 @@
 $(obj)u-boot.srec:	$(obj)u-boot
 		$(OBJCOPY) -O srec $< $@
 
-$(obj)u-boot.bin:	$(obj)u-boot
+$(obj)u-boot.bin:	$(obj)u-boot | mkbl2
 		$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
 		$(BOARD_SIZE_CHECK)
 ifeq ($(CONFIG_S5PC210),y)
@@ -514,6 +514,9 @@
 		$(CFLAGS) $(CFLAGS_$(BCURDIR)/$(@F)) $(CFLAGS_$(BCURDIR)) \
 		-o $@ $(src)lib/asm-offsets.c -c -S
 
+mkbl2: mkbl2.c
+	$(HOSTCC) $(HOSTCFLAGS) -o $@ $^
+
 #########################################################################
 else	# !config.mk
 all $(obj)u-boot.hex $(obj)u-boot.srec $(obj)u-boot.bin \
